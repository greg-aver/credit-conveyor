openapi: 3.0.0
info:
  title: 'MVP Level 5'
  description: 'Сервис gateway'
  version: 1.0.0
  contact:
    name: 'Григорий Аверьянов'
    url: 'https://github.com/greg-aver/credit-conveyor'
servers:
  - url: 'http://localhost:8080/'
    description: 'localhost'
paths: {}

components:
  schemas:
    LoanApplicationRequestDTO:
      title: Loan Application Request
      type: object
      description: Short application info.
      required:
        - amount
        - term
        - firstName
        - lastName
        - email
        - birthdate
        - passportSeries
        - passportNumber
      properties:
        amount:
          type: number
          format: double
          example: 1000000
          minimum: 10000
          description: Requested loan amount.
        term:
          type: integer
          example: 39
          minimum: 6
          description: Requested loan terms (months).
        firstName:
          type: string
          example: Mikhail
          description: Requested the borrower's first name.
          pattern: '[A-Za-z\-]{2,30}'
        middleName:
          type: string
          example: Alexey
          description: Requested the borrower's middle name.
          pattern: '[A-Za-z\-]{2,30}'
        lastName:
          type: string
          example: Deev
          description: Requested the borrower's last name.
          pattern: '[A-Za-z\-]{2,30}'
        email:
          type: string
          example: mdeev@neoflex.ru
          description: Requested the borrower's email.
          pattern: '[\w\.]{2,50}@[\w\.]{2,20}.[\w\.]{2,20}'
        birthdate:
          type: string
          format: date
          example: 2021-05-25
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}'
          description: Date of birth.
        passportSeries:
          type: string
          example: 0808
          pattern: '[0-9]{4}'
          description: Passport series.
        passportNumber:
          type: string
          example: 010203
          pattern: '[0-9]{6}'
          description: Passport number.

    LoanOfferDTO:
      title: Loan offer
      type: object
      description: Detailed loan offer
      required:
        - applicationId
        - requestedAmount
        - totalAmount
        - term
        - monthlyPayment
        - rate
        - isInsuranceEnabled
        - isSalaryClient
      properties:
        applicationId:
          type: integer
          format: int64
          example: 300
          minimum: 0
          description: Response application id.
        requestedAmount:
          type: number
          format: double
          example: 1000000
          minimum: 10000
          description: Requested amount.
        totalAmount:
          type: number
          format: double
          example: 1000000
          minimum: 10000
          description: Total loan amount.
        term:
          type: integer
          example: 49
          minimum: 6
          description: Loan terms.
        monthlyPayment:
          type: number
          format: double
          example: 344.4
          minimum: 0
          description: Monthly loan payment.
        rate:
          type: number
          format: double
          example: 17.4
          minimum: 0
          description: Loan interest rate.
        isInsuranceEnabled:
          type: boolean
          example: true
          description: Is insurance included?
        isSalaryClient:
          type: boolean
          example: false
          description: Does the client have a salary card in the bank?

    ScoringDataDTO:
      title: Scoring Data
      description: Detailed data about the client for scoring.
      type: object
      required:
        - amount
        - term
        - firstName
        - lastName
        - middleName
        - gender
        - birthdate
        - passportSeries
        - passportNumber
        - passportIssueData
        - passportIssueBranch
        - maritalStatus
        - dependentAmount
        - employment
        - account
        - isInsuranceEnabled
        - isSalaryClient
      properties:
        amount:
          type: number
          format: double
          example: 100000
          description: Amount of credit.
          minimum: 10000
        term:
          type: integer
          example: 24
          minimum: 6
          description: Requested loan terms (months).
        firstName:
          type: string
          example: Mikhail
          description: Requested the borrower's first name.
          pattern: '[A-Za-z\-]{2,30}'
        middleName:
          type: string
          example: Alexey
          description: Requested the borrower's middle name.
          pattern: '[A-Za-z\-]{2,30}'
        lastName:
          type: string
          example: Deev
          description: Requested the borrower's last name.
          pattern: '[A-Za-z\-]{2,30}'
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - NON_BINARY
          description: >
            Types of gender:
              * Мужчина
              * Женщина
              * Небинарный пол
        birthdate:
          type: string
          format: date
          example: 2021-05-25
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}'
          description: Date of Birth.
        passportSeries:
          type: string
          example: 0808
          pattern: '[0-9]{4}'
          description: Passport series.
        passportNumber:
          type: string
          example: 010203
          pattern: '[0-9]{6}'
          description: Passport number.
        passportIssueDate:
          type: string
          format: date
          example: 2021-05-25
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}'
          description: Passport issue date.
        passportIssueBranch:
          type: string
          example: Hospitable department of Dagestan.
          description: Passport Department.
        maritalStatus:
          type: string
          enum:
            - MARRIED
            - DIVORCED
            - SINGLE
            - WIDOW_WIDOWER
          description: >
            Types of marital status:
              * Женат/замужем
              * Счастлив в разводе
              * Круто одному
              * Вдова/вдовец
        dependentAmount:
          type: integer
          example: 100000
          minimum: 10000
          description: Количество иждивенцев.
        employment:
          $ref: '#/components/schemas/EmploymentDTO'
        account:
          type: string
          example: 003456
          description: Customer account.
        isInsuranceEnabled:
          type: boolean
          example: true
          description: Is insurance included?
        isSalaryClient:
          type: boolean
          example: false
          description: Does the client have a salary card in the bank?

    CreditDTO:
      title: credit
      type: object
      description: Loan offer to a customer.
      required:
        - id
        - amount
        - term
        - monthlyPayment
        - rate
        - psk
        - isInsuranceEnabled
        - isSalaryClient
        - paymentSchedule
      properties:
        id:
          type: integer
          format: int64
          example: 700
          description: Credit id.
        amount:
          type: number
          format: double
          example: 1000000
          minimum: 10000
          description: Requested loan amount.
        term:
          type: integer
          example: 39
          minimum: 6
          description: Requested loan terms (months).
        monthlyPayment:
          type: number
          format: double
          example: 344.4
          minimum: 0
          description: Monthly loan payment.
        rate:
          type: number
          format: double
          example: 17.4
          minimum: 0
          description: Loan interest rate.
        psk:
          type: number
          format: double
          example: 10155.5
          minimum: 10000
          description: Total cost of the loan.
        isInsuranceEnabled:
          type: boolean
          example: true
          description: Is insurance included?
        isSalaryClient:
          type: boolean
          example: false
          description: Does the client have a salary card in the bank?
        paymentSchedule:
          type: array
          items:
            $ref: '#/components/schemas/PaymentScheduleElement'

    EmploymentDTO:
      title: employment
      type: object
      description: Detailed information about the work of the client.
      required:
        - employmentStatus
        - employerINN
        - salary
        - position
        - workExperienceTotal
        - workExperienceCurrent
      properties:
        employmentStatus:
          type: string
          enum:
            - UNEMPLOYED
            - SELF_EMPLOYED
            - EMPLOYED
            - BUSINESS_OWNER
          description: >
            Types of work status:
              * Безработный
              * Самозанятый
              * Трудоустроен
              * Владелец бизнеса
        employerINN:
          type: string
          example: 00085866
          description: INN
        salary:
          type: number
          format: double
          example: 12000
          description: Client salary.
        position:
          type: string
          enum:
            - WORKER
            - MID_MANAGER
            - TOP_MANAGER
            - OWNER
          description: >
            Client position:
              * Работник 
              * Менеджер среднего звена
              * Топ-менеджер
              * Владелец
        workExperienceTotal:
          type: integer
          description: Work experience total.
          example: 12
        workExperienceCurrent:
          type: integer
          example: 4
          description: Work experience current.

    PaymentScheduleElement:
      title: payment schedule element.
      type: object
      description: Monthly payment.
      required:
        - number
        - date
        - totalPayment
        - interestPayment
        - debtPayment
        - remainingDebt
      properties:
        number:
          type: integer
          example: 10
          description: Payment number.
        date:
          type: string
          format: date
          example: 2021-05-25
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}'
          description: Payment date.
        totalPayment:
          type: number
          format: double
          example: 1222.7
          description: totalPayment = interestPayment + debtPayment.
        interestPayment:
          type: number
          format: double
          example: 7000
          description: Payment of the loan.
        debtPayment:
          type: number
          format: double
          example: 988
          description: Loan interest payment.
        remainingDebt:
          type: number
          format: double
          example: 300
          description: Loan balance.

    MessageKafka:
      title: Email Message
      type: object
      properties:
        address:
          type: string
          pattern: '[\w\.]*@\w{2,10}\.\w{2,5}'
          example: mdeev@neoflex.ru
          description: Client's email address.
        theme:
          type: string
          example: DOCUMENTS_CREATED
          description: >
            Types of theme:
            Types of theme:
              * Финишная регистрация
              * Документы созданы
              * Кредит выдан
              * Перейти к оформлению документов
              * Ссылка на подписание и код
          enum:
            - FINISH_REGISTRATION
            - CREATE_DOCUMENTS
            - CREDIT_ISSUED
            - APPLICATION_DENIED
            - SEND_SES
            - SEND_DOCUMENTS
        applicationId:
          type: integer
          format: int64
          example: 99
          description: Application Id.

    EmailMessage:
      title: email message
      type: object
      description: Email that goes to the client.
      required:
        - subject
        - text
        - address
      properties:
        subject:
          type: string
          example: Won a billion!
        text:
          type: string
          example: Congratulations, you are a lucky person. Won a billion!
        address:
          type: string
          example: email@gmail.com

    ApplicationStatus:
      type: string
      enum:
        - REQUEST_DENIED
        - PREAPPROVAL
        - APPROVED
        - CC_DENIED
        - CC_APPROVED
        - PREPARE_DOCUMENTS
        - DOCUMENT_CREATED
        - CLIENT_DENIED
        - DOCUMENT_SIGNED
        - CREDIT_ISSUED
      example: APPROVED
      description: Application status.

    ApplicationDTO:
      title: Application
      type: object
      description: All application info.
      required:
        - id
        - status
        - client
        - creationDate
        - statusHistory
      properties:
        id:
          type: integer
          format: int64
          example: 123
          description: Application id.
        client:
          $ref: '#/components/schemas/ClientDTO'
        credit:
          $ref: '#/components/schemas/CreditDTO'
        status:
          $ref: '#/components/schemas/ApplicationStatus'
        creationDate:
          type: string
          format: date-time
          example: 2022-05-01
          description: 'Application creation date'
        signDate:
          type: string
          format: date-time
          example: 2022-05-01
          description: 'Application sign date'
        sesCode:
          type: string
          example: 1234
          description: 'Application Simple Electric Sign code'
        statusHistory:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationStatusHistoryDTO'

    ClientDTO:
      title: Client
      type: object
      description: Client's info.
      properties:
        firstName:
          type: string
          example: Ivan
          description: First name
        lastName:
          type: string
          example: Ivanov
          description: Last name
        middleName:
          type: string
          example: Ivanonovich
          description: Middle name (if present).
        email:
          type: string
          example: iivanov@email.com
          description: Client's email.
        gender:
          type: string
          example: MALE
          description: Client's gender.
        birthdate:
          type: string
          format: date
          example: 1996-11-27
          description: Client's birthdate
        passportSeries:
          type: string
          example: 1234
          description: Client's passport series
        passportNumber:
          type: string
          example: 123456
          description: Client's passport series
        passportIssueDate:
          type: string
          format: date
          example: 2016-11-27
          description: Client's passport issue date.
        passportIssueBranch:
          type: string
          example: 123-456
          description: Client's passport issue branch.
        maritalStatus:
          type: string
          example: SINGLE
          description: Client's marital status.
        dependentAmount:
          type: integer
          example: 1
          description: Client's dependents amount.
        employment:
          $ref: '#/components/schemas/EmploymentDTO'
        account:
          type: string
          example: 11223344556677889900
          description: Client's master account.


    ApplicationStatusHistoryDTO:
      title: Application status history.
      type: object
      required:
        - status
        - time
        - changeType
      properties:
        status:
          $ref: '#/components/schemas/ApplicationStatusEnum'
        time:
          type: string
          format: date-time
          example: 2021-05-25
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}'
        changeType:
          type: string
          enum:
            - AUTOMATIC
            - MANUAL


    FinishRegistrationRequestDTO:
      title: Finish registration request.
      type: object
      description: Additional information about the client.
      required:
        - gender
        - maritalStatus
        - dependentAmount
        - passportIssueDate
        - passportIssueBranch
        - employment
      properties:
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - NON_BINARY
          description: >
            Types of gender:
              * Мужчина
              * Женщина
              * Небинарный пол
        maritalStatus:
          type: string
          enum:
            - MARRIED
            - DIVORCED
            - SINGLE
            - WIDOW_WIDOWER
          description: >
            Types of marital status:
              * Женат/замужем
              * Счастлив в разводе
              * Круто одному
              * Вдова/вдовец
        dependentAmount:
          type: integer
          example: 100000
          minimum: 10000
          description: Количество иждивенцев.
        passportIssueDate:
          type: string
          format: date
          example: 2021-05-25
          pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}'
          description: Passport issue date.
        passportIssueBranch:
          type: string
          example: Hospitable department of Dagestan.
          description: Passport Department.
        employment:
          $ref: '#/components/schemas/EmploymentDTO'
        account:
          type: string
          example: 003456
          description: Customer account.








